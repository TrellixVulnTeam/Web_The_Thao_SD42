{{>LeftAdmin}}
<style>


input {
  border: 1px solid transparent;
  background-color: #f1f1f1;
  padding: 10px;
  font-size: 16px;
}

input[type=text] {
  background-color: #f1f1f1;
  width: 100%;
}

input[type=submit] {
  background-color: DodgerBlue;
  color: #fff;
  cursor: pointer;
}

.autocomplete-items {
  position: absolute;
  border: 1px solid #d4d4d4;
  border-bottom: none;
  border-top: none;
  z-index: 99;
  /*position the autocomplete items to be the same width as the container:*/
  top: 100%;
  left: 0;
  right: 0;
}

.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: #fff; 
  border-bottom: 1px solid #d4d4d4; 
}

/*when hovering an item:*/
.autocomplete-items div:hover {
  background-color: #e9e9e9; 
}

/*when navigating through the items using the arrow keys:*/
.autocomplete-active {
  background-color: DodgerBlue !important; 
  color: #ffffff; 
}
</style>

<form class=" navbar-search" style="width:70%; margin: 0 auto;">
    <div class="input-group autocomplete">
        
        <input id="inputUser" type="text" class="form-control bg-light border-1" placeholder="Search for username"
            aria-label="Search" aria-describedby="basic-addon2">
        <div class="input-group-append">
            <button class="btn btn-primary" type="button">
                <i class="fas fa-search fa-sm"></i>
            </button>
        </div>
    </div>
</form>
<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Page Heading -->
    <h1 class="h3 mb-2 mt-4 text-gray-800">EDIT USER {{user.username}}</h1>
    

    <!-- DataTales Example -->
    <div class="col none-mp">
                <div class="row none-mp">
                    <!--Box Update Comics-->
                    <div class="col box-update-tag">
                        <form method="POST"  id="signupForm" action="/admin/edit-user">
                            <div class="form-group input_group al-login" style="display:none">
                                <label class="title-form" for="my-input">Id user</label>
                                <input class="form-control" name="id" type="text" value="{{user._id}}" >
                            </div>
                            <div class="form-group input_group al-login">
                                <label class="title-form" for="my-input">Id user</label>
                                <input  class="form-control" type="text" value="{{user._id}}" disabled>
                            </div>
                            
                            <div class="form-group input_group al-login" style="display:none">
                                <label class="title-form" for="my-input">Username</label>
                                <input class="form-control" name="username" type="text" autocomplete="on" placeholder="{{user.username}}" value="{{user.username}}">
                            </div>
                            <div class="form-group input_group al-login">
                                <label class="title-form" for="my-input">Username</label>
                                <input class="form-control" name="username" type="text" autocomplete="on" placeholder="{{user.username}}" value="{{user.username}}" disabled>
                            </div>

                            <div class="form-group input_group al-login">
                                <label class="title-form" for="my-input">Họ và tên</label>
                                <input class="form-control" name="fullname" type="text" autocomplete="on" placeholder="{{user.fullname}}" value="{{user.fullname}}">
                            </div>
                            <div class="form-group input_group al-login">
                                <label class="title-form" for="my-input">Email</label>
                                <input class="form-control" name="email" type="text" autocomplete="on" placeholder="{{user.email}}" value="{{user.email}}"> 
                            </div>
                            <div class="form-group input_group al-login">
                                <label class="title-form" for="my-input">Số điện thoại</label>
                                <input class="form-control" name="sdt" type="text" autocomplete="on" placeholder="{{user.sdt}}" value="{{user.sdt}}">
                            </div>
                                
                            <div class="form-group input_group al-login">
                                <label class="title-form" for="my-input">Địa chỉ</label>
                                <input class="form-control" name="diachi" type="text" autocomplete="on" placeholder="{{user.diachi}}" value="{{user.diachi}}">
                            </div>    
                            <div class="col form-check pd-chk" >
                                    <label class="title-form" for="my-input" style="margin-right:30px">Quyền truy cập người dùng</label>
                                    <input class="form-check-input" name="role" type="checkbox" value="0">
                                    <label class="form-check-label" style="margin-right:30px">
                                        Guest
                                    </label>
                                    <input class="form-check-input" name="role" type="checkbox" value="1">
                                    <label class="form-check-label" style="margin-right:30px">
                                        Admin
                                    </label>
                                    
                                </div>  
                            <div class="form-group">
                                <input type="submit" id="submit" value="Lưu thay đổi" class="btn btn-primary login-btn align-input" name="submit">
                            </div>
                        </form>
                    
                    
                        
                    </div>
                </div>
                </div>

</div>
<!-- /.container-fluid -->

</div>
<!-- End of Main Content -->

<!-- Footer -->
<footer class="sticky-footer bg-white">
    <div class="container my-auto">
        <div class="copyright text-center my-auto">
            <span>Copyright &copy; Your Website 2020</span>
        </div>
    </div>
</footer>
<!-- End of Footer -->

</div>
<!-- End of Content Wrapper -->

</div>
<!-- End of Page Wrapper -->

<!-- Scroll to Top Button-->
<a class="scroll-to-top rounded" href="#page-top">
    <i class="fas fa-angle-up"></i>
</a>

<!-- Logout Modal-->
<div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                <a class="btn btn-primary" href="login.html">Logout</a>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap core JavaScript-->
<script src="/vendor/jquery/jquery.min.js"></script>
<script src="/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

<!-- Core plugin JavaScript-->
<script src="/vendor/jquery-easing/jquery.easing.min.js"></script>

<!-- Custom scripts for all pages-->
<script src="/js/sb-admin-2.min.js"></script>

<!-- Page level plugins -->
<script src="/vendor/datatables/jquery.dataTables.min.js"></script>
<script src="/vendor/datatables/dataTables.bootstrap4.min.js"></script>

<!-- Page level custom scripts -->
<script src="/js/demo/datatables-demo.js"></script>

<script>
    //fetch('http://localhost:3000/data')
    //.then(response => response.json())
    //.then(json => json.forEach(x => console.log(x)))

    function autocomplete(inp, arr) {
        
        var currentFocus;
        
        inp.addEventListener("input", function (e) {
            var a, b, i, val = this.value;
            /*close any already open lists of autocompleted values*/
            closeAllLists();
            if (!val) { return false; }
            currentFocus = -1;
            /*create a DIV element that will contain the items (values):*/
            a = document.createElement("DIV");
            a.setAttribute("id", this.id + "autocomplete-list");
            a.setAttribute("class", "autocomplete-items");
            /*append the DIV element as a child of the autocomplete container:*/
            this.parentNode.appendChild(a);
            /*for each item in the array...*/
            for (i = 0; i < arr.length; i++) {
                /*check if the item starts with the same letters as the text field value:*/
                if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                    /*create a DIV element for each matching element:*/
                    b = document.createElement("DIV");
                    /*make the matching letters bold:*/
                    b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                    b.innerHTML += arr[i].substr(val.length);
                    /*insert a input field that will hold the current array item's value:*/
                    b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                    /*execute a function when someone clicks on the item value (DIV element):*/
                    b.addEventListener("click", function (e) {
                        /*insert the value for the autocomplete text field:*/
                        inp.value = this.getElementsByTagName("input")[0].value;
                        /*close the list of autocompleted values,
                        (or any other open lists of autocompleted values:*/
                        closeAllLists();
                    });
                    a.appendChild(b);
                }
                
            }
            console.log(inp)
        });
        /*execute a function presses a key on the keyboard:*/
        inp.addEventListener("keydown", function (e) {
            var x = document.getElementById(this.id + "autocomplete-list");
            if (x) x = x.getElementsByTagName("div");
            if (e.keyCode == 40) {
                /*If the arrow DOWN key is pressed,
                increase the currentFocus variable:*/
                currentFocus++;
                /*and and make the current item more visible:*/
                addActive(x);
            } else if (e.keyCode == 38) { //up
                /*If the arrow UP key is pressed,
                decrease the currentFocus variable:*/
                currentFocus--;
                /*and and make the current item more visible:*/
                addActive(x);
            } else if (e.keyCode == 13) {
                /*If the ENTER key is pressed, prevent the form from being submitted,*/
                e.preventDefault();
                if (currentFocus > -1) {
                    /*and simulate a click on the "active" item:*/
                    if (x) x[currentFocus].click();
                }
            }
        });
        function addActive(x) {
            /*a function to classify an item as "active":*/
            if (!x) return false;
            /*start by removing the "active" class on all items:*/
            removeActive(x);
            if (currentFocus >= x.length) currentFocus = 0;
            if (currentFocus < 0) currentFocus = (x.length - 1);
            /*add class "autocomplete-active":*/
            x[currentFocus].classList.add("autocomplete-active");
        }
        function removeActive(x) {
            /*a function to remove the "active" class from all autocomplete items:*/
            for (var i = 0; i < x.length; i++) {
                x[i].classList.remove("autocomplete-active");
            }
        }
        function closeAllLists(elmnt) {
            /*close all autocomplete lists in the document,
            except the one passed as an argument:*/
            var x = document.getElementsByClassName("autocomplete-items");
            for (var i = 0; i < x.length; i++) {
                if (elmnt != x[i] && elmnt != inp) {
                    x[i].parentNode.removeChild(x[i]);
                }
            }
        }
        /*execute a function when someone clicks in the document:*/
        document.addEventListener("click", function (e) {
            closeAllLists(e.target);
        });
    }

    //let dataUsers = [
    //{title: "abc"}, {title: "adb"}, {title: "bcs"}]
    
    let dataUsers = [];

         axios.get('http://localhost:3000/api/users')
        .then(function (response){
            var data = [];
            
            response.data.forEach(
                (x,i) => {
                    data[i] = x
                    console.log(x)
                    }
            )
            dataUsers = data[0]
            
            console.log(dataUsers)
        })
        .catch(function (error) {
            console.log(error);
        })  

console.log("data" + dataUsers[0])
    $(document).ready(async function (){
        
        autocomplete(document.getElementById("inputUser"), dataUsers.map(x => x.username));
        $('input[type="checkbox"]').on('change', function() {
   $('input[type="checkbox"]').not(this).prop('checked', false);
});
    })
    
</script>